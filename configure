#!/bin/bash
# Configure script
# Run once when you unpack source

build_type="release"

use_g4="yes"
use_root="yes"

### Check for GEANT4 install
if [ -z "$G4INSTALL" ]; then
    echo '$G4INSTALL not set, so Geant4 will not be used'
    use_g4="no"
fi

if [ -z "$ROOTSYS" ]; then
    echo '$ROOTSYS not set, so ROOT will not be used'
    use_root="no"
fi

type -P python &>/dev/null || { echo "I require python but it's not installed.  Aborting." >&2; exit 1; }

### Create environment files
maus_root_dir=`pwd`
target=`g++ -dumpversion`

cat > env.sh <<EOF
#!/bin/sh

export USE_ROOT=$use_root
export USE_G4=$use_g4

if [ -z "\$MAUS_ROOT_DIR" ]; then
     MAUS_ROOT_DIR=$maus_root_dir
     PATH=\$MAUS_ROOT_DIR/bin:\$PATH
     if [ -z "${LD_LIBRARY_PATH}" ]; then
          LD_LIBRARY_PATH=\$MAUS_ROOT_DIR/lib
     else
          LD_LIBRARY_PATH=\$MAUS_ROOT_DIR/lib:\$LD_LIBRARY_PATH   
     fi

     # scons
     PYTHONPATH=\$MAUS_ROOT_DIR/third_party/scons-2.0.1/lib/scons-2.0.1:\$PYTHONPATH
     PATH=\$MAUS_ROOT_DIR/third_party/scons-2.0.1/bin:\$PATH

     # config python scripts
     PYTHONPATH=\$MAUS_ROOT_DIR/config:\$PYTHONPATH 

     # nose
     PYTHONPATH=\$MAUS_ROOT_DIR/third_party/nose-0.11.3/lib/python:\$PYTHONPATH
     PATH=\$MAUS_ROOT_DIR/third_party/nose-0.11.3/bin:\$PATH 

     # jsoncpp
     PATH=\$MAUS_ROOT_DIR/third_party/JsonCpp_0.5.0/bin/linux-gcc-${target}:\$PATH  
     LD_LIBRARY_PATH=\$MAUS_ROOT_DIR/third_party/JsonCpp_0.5.0/libs/linux-gcc-${target}:\$LD_LIBRARY_PATH

     # workers
     PYTHONPATH=\$MAUS_ROOT_DIR/workers/build/${build_type}/:\$PYTHON_PATH
     LD_LIBRARY_PATH=\$MAUS_ROOT_DIR/workers/build/${build_type}:\$LD_LIBRARY_PATH
 
     export MAUS_ROOT_DIR PATH LD_LIBRARY_PATH GLG4DATA RAT_CFLAGS
     echo "SUCCESS: MAUS setup"
else
     echo "ERROR: MAUS already setup"
fi

EOF

source env.sh > /dev/null

echo "Setting up jsoncpp"
cd third_party/JsonCpp_0.5.0
scons platform=linux-gcc
cd ../..

echo "Done with JsonCpp and running JsonCpp test"
echo
echo "Summary:"
echo "    Using geant4: $use_g4"
echo "    Using ROOT: $use_root"

#cat > env.csh <<EOF
#!/bin/csh
#setenv MAUS_ROOT_DIR $maus_root_dir
#setenv PATH "\$MAUS_ROOT_DIR/bin:\$PATH"
#if ({\$?LD_LIBRARY_PATH}) then
#  setenv LD_LIBRARY_PATH "\$MAUS_ROOT_DIR/lib:\$LD_LIBRARY_PATH"
#else
#  setenv LD_LIBRARY_PATH "\$MAUS_ROOT_DIR/lib"
#endif
#if ({\$?PYTHONPATH}) then
#  setenv PYTHONPATH "\$MAUS_ROOT_DIR/third_party/scons-2.0.1/lib/scons-2.0.1:\$PYTHONPATH"
#else
#  setenv PYTHONPATH "\$MAUS_ROOT_DIR/third_party/scons-2.0.1/lib/scons-2.0.1"
#endif
#EOF

